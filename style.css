:root {
  --color1: #f2ebd8;
  --color2: rgba(192, 53, 118, 0.57);
  --color3: #1a236880;
  --color4: rgb(18, 19, 19);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background: url(./assets/img/pexels-astronaute\ gold.jpeg) center/cover;
  height: 100vh;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  color: var(--color1);
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

/* on parametre card pour mieux centrer car en block  */

.card {
  background: rgba(0, 0, 0, 0.427);
  width: calc(100% - 40%);
  /* width=100% mais avec 40% (20 de chaque côté)de marge sur les côtés */

  padding: 20px 20px 6px;
  box-shadow: -9px 8px 11px rgba(128, 128, 128, 0.546);

  border-radius: 5px;
  backdrop-filter: blur(3px);
}
.card:before {
  /* permet d'intégrer ici des éléments à html sans avoir besoin de créer une div */
  content: "\2734";
  position: absolute;
  top: 10px;
  right: 20px;
  font-size: 2.5rem;
}

h1 {
  margin-bottom: 10px;
  color: rgba(139, 44, 58, 0.795);
  font-style: oblique;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  position: relative;
}

/* ----pour faire une séparation paramétrable---sinon utiliser hr------------ */

h1::after {
  content: "";
  position: absolute;
  background: var(--color1);
  height: 1px;
  width: 100%;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%) scaleX(0);
  animation: h1anim 10s ease-in-out forwards;
  /*  permet de faire débuter l'anim à gauche.Par défaut par du centre */
}
/* forwards permet de garder l'animation "ouverte " */

/* ------création animation------ */

@keyframes h1anim {
  100% {
    transform: translateX(-50%) scaleX(1);
  }
}

.grid-container {
  display: grid;
  grid-template-columns: 20% 80%;
}

.polygon-container {
  filter: drop-shadow(-1px 6px 3px var(--color1));
  /* obligé de passer par le parent pour le border shadow d'un polygone */
  place-self: center;
  /* mettre le parent en grid */
}

.polygon {
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
  /* ou avec cssgradient */
  /* background:linear-gradient(135deg, var(--color2)0%,var(--color1)100%) ; */

  background: linear-gradient(
    90deg,
    rgba(131, 58, 180, 1) 0%,
    rgba(252, 176, 69, 1) 100%
  );
  /* fait avec webgradient */

  /* ou background: rgb(2,0,36);
background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,121,30,0.5004595588235294) 47%, rgba(0,157,255,0.4948573179271709) 100%); avec cssgradient*/

  height: 100px;
  width: 100px;
}

.polygon:after {
  /* création d'un after dans l'élément polygon */
  content: "Hodle";
  position: absolute;
  color: var(--color3);
  /* background: var(--color1); */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(269deg);
  /* obligé car il se centre par rapport à son coin superieur gauche */
  width: 90px;
  padding: 4px;
  text-align: center;
  font-family: fantasy;
}

p {
  line-height: 23px;
  margin: 20px;

  /* --------------webkit-------------------- */
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 4;
  overflow: hidden;
  /* laisser le choix à l'ut.de lire plus ou pas */
  text-align: justify;
}
/* ---------chgt couleur texte lors d'une copie------ */
p::selection {
  background: var(--color1);
  color: var(--color4);
}
/* pour changer la couleur lorsqu'on sélectionne du texte pour le copier/ex */

.checkbox-container {
  display: flex;
  justify-content: space-around;
  margin: 20px 0 30px;
  perspective: 60px;
}

/* perspective de 0 à 1000, plus le chiffre est petit, plus c'est accentué */

/* ---------style des checkbox------ */

input[type="checkbox"] {
  display: none;
}

input[type="checkbox"]:checked + label {
  background: var(--color2);
  color: var(--color4);
  transform: scale(1.2);
  /* grossi de 5% */
  /* luminosité lorsque cliqué */
  filter: brightness(100%);
  /* blur(3px) on peut rajouter du flou*/

  /* permet de voir si checké ou pas */
}

label {
  cursor: pointer;
  border: 1px solid var(--color2);
  background: var(--color2);
  padding: 10px;
  border-radius: 10px;
  transition: 0.2s;
  user-select: none;
}

/* connecter l'animation à un élément */
label:first-of-type:hover {
  animation: label1 0.8s infinite linear;
}
/* autre option:alternate  */
@keyframes label1 {
  50% {
    transform: scale(1.3);
  }
  100% {
    transform: scale(1);
  }
}

/* autre méthode  et animation*/
label:nth-child(4):hover {
  animation: label2 3s infinite linear ;
  /* linear =plus régulier */
}
/* NE PAS OUBLIER LA PERSPECTIVE SUR LE PARENT */
@keyframes label2 {
  33% {
    transform: translateZ(30px);
  }
  66% {
    transform: translateZ(-40px);
  }
  100% {
    transform: translateX(0);
  }
  /* lire: de 0 à 33, de 33 à 66, de 66 à 100 .En positif léléménet vient vers nous, en négatif il s'éloigne*/
}

.e-mail {
  text-align: center;
  margin-bottom: 20px;
}

.e-mail input {
  padding: 10px;
  border-radius: 10px;
  outline: none;
  border: 4px solid transparent;
  transition: 0.3s;
  text-align: center;
  font-size: 1rem;
  color: var(--color1);
  background: rgba(125, 56, 76, 0.605);
  min-width: 150px;
  width: 35%;
  max-width: 300px;
  /* on donne le width et on s'assure que ça n'aille pas au-dessus ni en -dessous d'une certaine taille */
}
/* pour gérer le texte lorsu'on est dessus  */

/* expérience util. */
input[type="text"]:focus {
  background: transparent;
  border: 4px solid var(--color2);
  /* on reprend les px de e-mail input pour éviter décalage */
  border-radius: 150px;
}
input[type="text"]::placeholder {
  color: var(--color1);
}

button {
  cursor: pointer;
  background: linear-gradient(
    90deg,
    rgba(131, 58, 180, 1) 0%,
    rgba(252, 176, 69, 1) 100%
  );
  border-radius: 120px;
  border: none;
  font-size: 1.1rem;
  padding: 10px 20px;
  display: block;
  margin: 0 auto;
  /* le positionner à dte */
  transition: 0.1s;
  /* ici, on l'a en entrée et sortie */
}
button:hover {
  letter-spacing: 2px;
}

/* ici quand on clique, pas juste quand on passe */
button:active {
  transform: scale(1.2);
}
button:hover + a,
a:hover {
  opacity: 1;
  /* fait apparaitre le a et le maintient le temps de cliquer dessus */
  visibility: visible;
  /* rf plus bas  */
  transform: translateY(0px);
  /* permet de faire bouger vert.le a de bas en haut, + cf 2ème transform plus loin  */
}

a {
  color: var(--color2);
  /* text-decoration: none; enlèverait le sous lignage */
  display: block;
  /* ou margin center auto */
  /* text-align:center; */
  /* si on veut déposer au centre  */

  opacity: 0;
  visibility: hidden;
  /* pour éviter que lorsque l'util. passe sur le lien qui est caché mais présent tout de même , ce lien ne bug pas  */
  transform: translateY(20px);
  transition: 0.3s;
}

a:visited {
  color: var(--color1);
}

img{
  height: 60PX;
  position: absolute;
  filter: drop-shadow(0px 6px 3px rgba(255, 255, 6, 0.6));
  z-index: -1;
  /* pour mettre 1 élément devant ou derrière  */

  animation: spaceship 40s infinite linear;
  /* ici on déclare l'animation, ensuite on la crée avec @keyframes identifier  */

}

@keyframes spaceship{
  0%{
    top:2%;
    left:2%;
    transform:rotate(10deg);
    /* si on veut réorienter par la suite */
  }
  10%{
    top:2%;
    left:30%;
    transform:rotate(60deg);
  }
  20%{
    top:9%;
    left:60%;
    transform:rotate(10deg);
  }
  30%{
    top:0%;
    left:80%;
    transform:rotate(80deg);
  }
  40%{
    top:20%;
    left:120%;
    transform:rotate(110deg);
  }
  50%{
    top:50%;
    left:80%;
    transform:rotate(323deg);
  }
  60%{
    top:90%;
    left:90%;
    transform:rotate(256deg);
  }
  70%{
    top:110%;
    left:50%;
    transform:rotate(237deg);
  }
  80%{
    top:85%;
    left:30%;
    transform:rotate(323deg);
  }
  90%{
    top:50%;
    left:15%;
    transform:rotate(350deg);
  }
  100%{
    top:2%;
    left:2%;
    transform:rotate(90deg);
  }
}
